OP_NOP	,	/* No operation : Does nothing .. really =D */
OP_HALT	,	/* Halt : Terminates the machine */
OP_PUSH , 	/* Push a value on top of the stack */
OP_POP 	,	/* Pop the top value from the stack */
OP_LSTR	, 	/* Load a string value and push it on top of the stack */
OP_ADD	,	/* Pop 2 values from the stack .. add them then push the result */
			/* NOTE : OP_ADD is overloaded .. it can add 2 numerical values or even concatenate 2 strings */
OP_SUB	,	/* Pop 2 values from the stack .. subtract the first popped from the last then push the result */
OP_MUL	,	/* Pop 2 values from the stack .. multiply them then push the result */
OP_DIV  ,	/* Pop 2 values from the stack .. divide the last popped into the first then push the result */
OP_TLT	,	/* test if less than : Pop A , Pop B .. if B < A push 1 .. otherwise push 0 */
OP_TLE	,	/* test if less or equal : Pop A , Pop B .. if B <= A push 1 .. otherwise push 0 */
OP_TGT	,	/* test if greater than : Pop A , Pop B .. if B > A push 1 .. otherwise push 0 */
OP_TGE	,	/* test if greater or equal : Pop A , Pop B .. if B >= A push 1 .. otherwise push 0 */
OP_TEQ	,	/* test if equal : Pop A , Pop B .. if B = A push 1 .. otherwise push 0 */
OP_TNE	,	/* test if not equal : Pop A , Pop B .. if B != A push 1 .. otherwise push 0 */
OP_JZ	,	/* Jump if zero to specific location relative to PC */
OP_JNZ	,	/* Jump if not zero to specific location relative to PC */
OP_JMP 	,	/* Unconditional jumping to specific location relative to PC */
OP_CAPI	,	/* Calls a default API function then returns back to where it was before calling */
OP_CALL	,	/* Calls a function then returns back to where it was before calling */
OP_RET	,	/* Returns from a function to where it was before calling */
OP_SGV	,	/* Pop a value and save it into variable in the Global table */
OP_LGV	,	/* Load a value from the Global table and push it on the stack */
OP_SLV	,	/* Pop a value and save it into variable in the Local table */
OP_LLV	,	/* Load a value from the Local table and push it on the stack */
OP_LLT		/* Construct a local table with the given elements count */
